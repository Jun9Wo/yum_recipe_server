name: Deploy develop CICD

on:
  push:
    branches: [ "develop" ]
  merge_group:
    branches: [ "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # Gradle 설정
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      # Spring Boot Build
      - name: Build with Gradle Wrapper
        run: ./gradlew clean build -x test

      # Docker 이미지 빌드 및 Docker Hub 푸시
      - name: Build and Push Docker Image
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker build -f Dockerfile -t ${{ secrets.DOCKER_REPONAME }} .
          docker tag ${{ secrets.DOCKER_REPONAME }}:latest ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPONAME }}:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPONAME }}:latest

      # docker-compose.yml을 EC2로 전송
      - name: Copy docker-compose.yml to EC2
        uses: appleboy/scp-action@v0.1.3
        with:
          source: "./docker-compose.yml"
          target: "/home/${{ secrets.AWS_USER }}/app/yum_recipe_server"
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USER }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}

      # AWS EC2에 배포 및 컨테이너 실행
      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@master
        id: deploy
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USER }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: |
            # 최신 이미지 pull
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPONAME }}:latest

            # 기존 컨테이너 중지 및 삭제
            sudo docker stop yum-recipe-server-container || true
            sudo docker rm yum-recipe-server-container || true

            # docker-compose 실행
            sudo docker-compose -f /home/${{ secrets.AWS_USER }}/app/yum_recipe_server/docker-compose.yml up -d

            # 사용하지 않는 이미지 정리
            sudo docker image prune -a -f
